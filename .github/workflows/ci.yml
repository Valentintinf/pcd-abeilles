name: CI/CD Docker Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies locally
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build and Start Docker Compose
      run: |
        docker-compose up -d
        echo "Waiting for services to be ready..."
        sleep 30

    - name: Show Docker logs
      run: docker logs $(docker ps -aqf "name=flask-app") || true
   
    - name: Health Check Flask
      run: curl --fail  http://localhost:5000 || exit 1

    - name: Show Docker logs for API Model
      run: docker logs $(docker ps -aqf "name=api-model") || true

    - name: Health Check API Model
      run: curl --fail http://localhost:8000/docs || exit 1

    - name: Show Docker logs for API Model
      run: docker logs $(docker ps -aqf "name=db-api") || true

    - name: Health Check DB API
      run: curl --fail http://localhost:8001/docs || exit 1

    - name: Test Predict API Model with Image from DB
      run: python tests/test_predict_from_db.py

  - name: Check if app.db exists
  run: |
    docker exec $(docker ps -qf "name=db-api") ls -l /app/app.db

    - name: Run Pytest
      run: pytest tests/

    - name: Cleanup
      run: docker-compose down